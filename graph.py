from asyncio import new_event_loop
from hashlib import new
import math
import matplotlib as mpl
from matplotlib import pyplot as plt
import pandas as pd
import numpy as np

def table_hakei(filename):
    df = pd.read_table(filename, sep="[ ,\t]", engine='python', names=('time','amp'), skiprows=0)
    df['time'] = df['time'] * 1.0/16000
    return df

#---------------A_a.datの波形表示----------------
# df = table_hakei("A_a.txt")
# fig = plt.figure()
# ax = fig.add_subplot(111)
# ax.minorticks_on()
# ax.grid(which="major", color="gray", linestyle="solid")
# ax.grid(which="minor", color="lightgray", linestyle="dotted")
# ax.plot(df['time'],df['amp'],label='input',color='purple',lw=1)
# ax.set_xlabel("time [s]")
# ax.set_ylabel("amplitude [dB]")
# plt.tight_layout()
# plt.savefig("report/A_a_py.png")
# plt.show()

#---------------A_a_madoの波形表示----------------
# df = table_hakei("A_a_mado.txt")
# fig = plt.figure()
# ax = fig.add_subplot(111)
# ax.minorticks_on()
# ax.grid(which="major", color="gray", linestyle="solid")
# ax.grid(which="minor", color="lightgray", linestyle="dotted")
# ax.plot(df['time'],df['amp'],label='input',color='purple',lw=1)
# ax.set_xlabel("time [s]")
# ax.set_ylabel("amplitude [dB]")
# plt.tight_layout()
# plt.savefig("report/A_a_mado_py.png")
# plt.show()

#---------------hammingの波形表示----------------
# df = table_hakei("mado.txt")
# fig = plt.figure()
# ax = fig.add_subplot(111)
# ax.minorticks_on()
# ax.grid(which="major", color="gray", linestyle="solid")
# ax.grid(which="minor", color="lightgray", linestyle="dotted")
# ax.plot(df['time'],df['amp'],label='input',color='purple',lw=1)
# ax.set_xlabel("time [s]")
# ax.set_ylabel("amplitude [dB]")
# plt.tight_layout()
# plt.savefig("report/hamming_py.png")
# plt.show()

#---------------A_a_autocorの波形表示----------------
# df = table_hakei("A_a_autocor.txt")
# fig = plt.figure()
# ax = fig.add_subplot(111)
# ax.minorticks_on()
# ax.grid(which="major", color="gray", linestyle="solid")
# ax.grid(which="minor", color="lightgray", linestyle="dotted")
# ax.plot(df['time'],df['amp'],label='input',color='purple',lw=1)
# ax.set_xlabel(r'delay $\tau$ [s]')
# ax.set_ylabel("amplitude [dB]")
# plt.tight_layout()
# plt.xlim(0,2e-6)
# plt.savefig("../report/A_a_autocor_py.png")
# plt.show()

#---------------A_a_datの基本周波数の表示----------------
def table_base(filename):
    df = pd.read_table(filename, sep="[ ,\t]", engine='python', names=('time','amp'), skiprows=0)
    return df
# df = table_base("kadai1.txt")
# fig = plt.figure()
# ax = fig.add_subplot(111)
# ax.minorticks_on()
# ax.grid(which="major", color="gray", linestyle="solid")
# ax.grid(which="minor", color="lightgray", linestyle="dotted")
# ax.plot(df['time'],df['amp'],label='input',color='purple',lw=1)
# ax.set_xlabel("shift")
# ax.set_ylabel("log(fundamental frequency)")
# plt.tight_layout()
# plt.xlim(0,19)
# plt.ylim(2.5,3.0)
# plt.savefig("../report/A_a_basic_freq_py.png")
# plt.show()

#---------------A_aiueo_datの基本周波数の表示----------------
df1 = table_base("kadai1_1.txt")
df2 = table_base("kadai1_2.txt")
df3 = table_base("kadai1_3.txt")
df4 = table_base("kadai1_4.txt")
df5 = table_base("kadai1_5.txt")
df6 = table_base("kadai1_6.txt")
fig = plt.figure()
ax = fig.add_subplot(111)
ax.minorticks_on()
ax.grid(which="major", color="gray", linestyle="solid")
ax.grid(which="minor", color="lightgray", linestyle="dotted")
ax.plot(df1['time'],df1['amp'],color='blue',lw=1,label="A_aiueo1")
ax.plot(df2['time'],df2['amp'],color='green',lw=1,label="A_aiueo2")
ax.plot(df3['time'],df3['amp'],color='purple',lw=1,label="A_aiueo3")
ax.plot(df4['time'],df4['amp'],color='orange',lw=1,label="A_aiueo4")
ax.plot(df5['time'],df5['amp'],color='pink',lw=1,label="A_aiueo5")
ax.plot(df6['time'],df6['amp'],color='red',lw=1,label="A_aiueo6")
ax.set_xlabel("shift")
ax.set_ylabel("fundamental frequency [Hz]")
plt.tight_layout()
plt.legend()
plt.xlim(-0.5,20.0)
plt.savefig("../report/A_aiueo_basic_freq_py.png")
plt.show()

#---------------A_a_DFTの波形表示----------------
# df = table_base("A_a_DFT.txt")
# fig = plt.figure()
# ax = fig.add_subplot(111)
# ax.minorticks_on()
# ax.grid(which="major", color="gray", linestyle="solid")
# ax.grid(which="minor", color="lightgray", linestyle="dotted")
# ax.plot(df['time'],df['amp'],color='purple',lw=1)
# ax.set_xlabel("frequency [Hz]")
# ax.set_ylabel("amplitude [dB]")
# plt.xlim(0.0,16000.0)
# plt.tight_layout()
# plt.savefig("report/A_a_DFT_py.png")
# plt.show()

#---------------A_a_FFTの波形表示----------------
# df_f = table_base("A_a_FFT.txt")
# df_d = table_base("A_a_DFT.txt")
# fig = plt.figure()
# ax = fig.add_subplot(111)
# ax.minorticks_on()
# ax.grid(which="major", color="gray", linestyle="solid")
# ax.grid(which="minor", color="lightgray", linestyle="dotted")
# ax.plot(df_d['time'],df_d['amp'],color='green',lw=1,label="DFT")
# ax.plot(df_f['time'],df_f['amp'],color='purple',lw=1,label="FFT")
# ax.set_xlabel("frequency [Hz]")
# ax.set_ylabel("amplitude [dB]")
# plt.xlim(0.0,16000.0)
# plt.legend()
# plt.tight_layout()
# plt.savefig("report/A_a_FFT_py.png")
# plt.show()

#---------------A_a_cepsの波形表示----------------
# df = table_hakei("A_a_ceps.txt")
# fig = plt.figure()
# ax = fig.add_subplot(111)
# ax.minorticks_on()
# ax.grid(which="major", color="gray", linestyle="solid")
# ax.grid(which="minor", color="lightgray", linestyle="dotted")
# ax.plot(df['time'],df['amp'],color='purple',lw=1)
# ax.set_xlabel("cepstrum [s]")
# ax.set_ylabel("amplitude [dB]")
# plt.tight_layout()
# plt.savefig("report/A_a_ceps_py.png")
# plt.show()

#---------------A_a_qfの波形表示----------------
# df = table_hakei("A_a_qf.txt")
# fig = plt.figure()
# ax = fig.add_subplot(111)
# ax.minorticks_on()
# ax.grid(which="major", color="gray", linestyle="solid")
# ax.grid(which="minor", color="lightgray", linestyle="dotted")
# ax.plot(df['time']*16000**2/512,df['amp'],color='purple',lw=1)
# ax.set_xlabel("frequency [Hz]")
# ax.set_ylabel("amplitude [dB]")
# plt.tight_layout()
# plt.savefig("report/A_a_qf_py.png")
# plt.show()

#---------------A_a_wiener_autocorの波形表示----------------
# df = table_hakei("A_a_wiener_autocor.txt")
# fig = plt.figure()
# ax = fig.add_subplot(111)
# ax.minorticks_on()
# ax.grid(which="major", color="gray", linestyle="solid")
# ax.grid(which="minor", color="lightgray", linestyle="dotted")
# ax.plot(df['time']*16000**2/512,df['amp'],color='purple',lw=1)
# ax.set_xlabel("frequency [Hz]")
# ax.set_ylabel("amplitude [dB]")
# plt.xlim(0,16000)
# plt.tight_layout()
# plt.savefig("../report/A_a_wiener_py.png")
# plt.show()

#---------------A_a_wiener_autocorの比較の波形表示----------------
# df1 = table_hakei("A_a_wiener_autocor.txt")
# df2 = table_base("A_a_FFT.txt")
# fig = plt.figure()
# ax = fig.add_subplot(111)
# ax.minorticks_on()
# ax.grid(which="major", color="gray", linestyle="solid")
# ax.grid(which="minor", color="lightgray", linestyle="dotted")
# ax.plot(df2['time'],df2['amp'],color='green',lw=1,label = "logarithmic power(FFT)")
# ax.plot(df1['time']*16000**2/512,df1['amp'],color='purple',lw=1,label = "autocorrelation")
# ax.set_xlabel("frequency [Hz]")
# ax.set_ylabel("amplitude [dB]")
# plt.xlim(0,16000)
# plt.legend()
# plt.tight_layout()
# plt.savefig("../report/A_a_wiener_comp_py.png")
# plt.show()

#----------------spk_aiueoの波形表示----------------
# from scipy.io.wavfile import read
# rate,data = read("../new_vowels/train/spk1/spk1_aeiou_01.wav")
# fig = plt.figure()
# ax = fig.add_subplot(111)
# ax.minorticks_on()
# ax.grid(which="major", color="gray", linestyle="solid")
# ax.grid(which="minor", color="lightgray", linestyle="dotted")
# ax.plot(data[0:15000],color='purple',lw=1)
# ax.set_xlabel("frequency [Hz]")
# ax.set_ylabel("amplitude [dB]")
# plt.tight_layout()
# plt.savefig("../report/spk1_aeiou_01_nosound.png")
# plt.show()